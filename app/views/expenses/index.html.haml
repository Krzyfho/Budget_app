%h1= t('expenses.all')
.container
  %table.table
    %thead
      %tr
        %th{:scope => "col"}= I18n.t('expenses.index.ordinal_number')
        %th{:scope => "col"}= I18n.t('expenses.index.name')
        %th{:scope => "col"}= I18n.t('expenses.index.price')
        %th{:scope => "col"}= I18n.t('expenses.index.paid_on')
        %th{:scope => "col"}= I18n.t('expenses.sort.action')
        %th{:scope => "col"}= I18n.t('expenses.category')
        %th{:scope => "col"}
          .dropdown
            %button#dropdownMenuButton1.btn.btn-secondary.dropdown-toggle.justify-content-end{"aria-expanded": "false", "data-bs-toggle": "dropdown", type: "button"}
              = I18n.t('expenses.sort.by')
            %ul.dropdown-menu{"aria-labelledby": "dropdownMenuButton1"}
              %li= sortable "name"
              %li= sortable "price"
              %li= sortable "paid_on"
              %li
                %hr.dropdown-divider
              %li= link_to t('expenses.sort.created_by'), expenses_path, {class: "btn"}
    %tbody
      - @expenses.each_with_index do |exp, idx|
        %tr
          %th{:scope => "row"}= idx + (params[:page] ? (params[:page].to_i * 10) - 10 : 0) + 1
          %td= exp.name
          %td= exp.price
          %td= exp.paid_on
          %td= exp.category.name
          %td
            = link_to t('expenses.index.edit'), edit_expense_path(exp.id), class: "btn btn-outline-primary"
            %button.btn.btn-outline-danger{"data-bs-target" => "#exampleModal#{exp.id}", "data-bs-toggle" => "modal", :type => "button"}
              = t('expenses.index.destroy')
          = render partial: 'modal', locals: { expense_modal: exp }
  .container
    = paginate @expenses